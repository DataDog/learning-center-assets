version: '3'
services:
  agent:
    image: "datadog/agent:7.21.1"
    environment:
      - DD_API_KEY
      - DD_APM_ENABLED=true
# add agent env variables
      - DD_PROCESS_AGENT_ENABLED=true
      - DD_DOCKER_LABELS_AS_TAGS={"my.custom.label.team":"team"}
      - DD_TAGS='env:ruby-shop'
    ports:
      - "8126:8126"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
# add agent log labels
  discounts:
    environment:
      - FLASK_APP=discounts.py
      - FLASK_DEBUG=1
      - POSTGRES_PASSWORD
      - POSTGRES_USER
      - DD_ENV=ruby-shop
      - DD_SERVICE=discounts-service
      - DD_VERSION=1.1
      - DD_AGENT_HOST=agent
# add discounts env variables
      - DD_TRACE_ANALYTICS_ENABLED=true
      - DD_PROFILING_ENABLED=true
    image: "ddtraining/discounts:1.0.0"
    command: [sh, -c, "pip install ddtrace -U && ddtrace-run flask run --port=5001 --host=0.0.0.0"]
    ports:
      - "5001:5001"
    volumes:
      - "/ecommworkshop/discounts-service-fixed:/app"
    depends_on:
      - agent
      - db
    labels:
# add discounts log labels 
      com.datadoghq.tags.env: "ruby-shop"
      com.datadoghq.tags.service: "discounts-service"
      com.datadoghq.tags.version: "1.1"
      my.custom.label.team: "discounts"
  frontend:
    environment:
      - DD_AGENT_HOST=agent
      - DD_TRACE_ANALYTICS_ENABLED=true
      - DD_ENV=ruby-shop
      - DD_SERVICE=store-frontend
      - DD_VERSION=1.1
      - DB_USERNAME
      - DB_PASSWORD
      - DD_CLIENT_TOKEN
      - DD_APPLICATION_ID
    image: "ddtraining/storefront:1.0.0"
    command: sh docker-entrypoint.sh
    ports:
      - "3000:3000"
    volumes:
      - "/ecommworkshop/store-frontend-instrumented-fixed:/spree"
    depends_on:
      - agent
      - db
      - discounts
      - advertisements
    labels:
# add frontend log labels
      com.datadoghq.tags.env: "ruby-shop"
      com.datadoghq.tags.service: "store-frontend"
      com.datadoghq.tags.version: "1.1"
      my.custom.label.team: "frontend"
  advertisements:
    environment:
      - FLASK_APP=ads.py
      - FLASK_DEBUG=1
      - POSTGRES_PASSWORD
      - POSTGRES_USER
      - DD_ENV=ruby-shop
      - DD_SERVICE=advertisements-service
      - DD_VERSION=1.1
      - DD_AGENT_HOST=agent
# add ads env variables
      - DD_TRACE_ANALYTICS_ENABLED=true
      - DD_PROFILING_ENABLED=true
    image: "ddtraining/advertisements:1.0.0"
    command: [sh, -c, "pip install ddtrace -U && ddtrace-run flask run --port=5002 --host=0.0.0.0"]
    ports:
      - "5002:5002"
    volumes:
      - "/ecommworkshop/ads-service-fixed:/app"
    depends_on:
      - agent
      - db
    labels:
# add ads log labels
      com.datadoghq.tags.env: "ruby-shop"
      com.datadoghq.tags.service: "advertisements-service"
      com.datadoghq.tags.version: "1.1"
      my.custom.label.team: "advertisements"
  db:
    image: postgres:11-alpine
    restart: always
    environment:
      - POSTGRES_PASSWORD
      - POSTGRES_USER
# add db log labels