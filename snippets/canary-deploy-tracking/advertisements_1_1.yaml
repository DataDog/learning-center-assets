apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: advertisements
    app: ecommerce
    tags.datadoghq.com/env: "ruby-shop"
    tags.datadoghq.com/service: "advertisements"
    tags.datadoghq.com/version: "1.0"
  name: advertisements-canary
spec:
  replicas: 1
  selector:
    matchLabels:
      service: advertisements
      app: ecommerce
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        service: advertisements
        app: ecommerce
        tags.datadoghq.com/env: "ruby-shop"
        tags.datadoghq.com/service: "advertisements"
        tags.datadoghq.com/version: "1.0"
    spec:
      containers:
      - image: ddtraining/advertisements-errors:1.0.0
        name: advertisements 
        imagePullPolicy: IfNotPresent
        command: ["ddtrace-run"]
        args: ["flask", "run", "--port=5002", "--host=0.0.0.0"]
        env:
          - name: FLASK_APP
            value: "ads.py"
          - name: FLASK_DEBUG
            value: "1"
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                key: pw
                name: db-password
          - name: POSTGRES_USER
            value: "user"
          - name: DATADOG_SERVICE_NAME
            value: "advertisements"
          - name: DD_ENV
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tags.datadoghq.com/env']
          - name: DD_SERVICE
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tags.datadoghq.com/service']
          - name: DD_VERSION
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tags.datadoghq.com/version']
          - name: DD_AGENT_HOST 
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: DD_LOGS_INJECTION
            value: "true"
          - name: DD_ANALYTICS_ENABLED
            value: "true"
          - name: DD_PROFILING_ENABLED
            value: "true"
        ports:
        - containerPort: 5002
        resources: {}

