version: '3'
services:
  datadog:
    image: 'datadog/agent:7.31.1'
    environment:
      - DD_API_KEY
      - DD_HOSTNAME=dd101-sre-host
      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
      - DD_PROCESS_AGENT_ENABLED=true
      - DD_DOCKER_LABELS_AS_TAGS={"my.custom.label.team":"team"}
      - DD_TAGS='env:dd101-sre'
      # agent non-local apm here
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
  discounts:
    environment:
      - FLASK_APP=discounts.py
      - FLASK_DEBUG=1
      - POSTGRES_PASSWORD
      - POSTGRES_USER
      - POSTGRES_HOST=db
    image: 'ddtraining/discounts:2.1.4'
    entrypoint:
      []
    ports:
      - '5001:5001'
    depends_on:
      - datadog
      - db
    labels:
      com.datadoghq.tags.env: 'dd101-sre'
      com.datadoghq.tags.service: 'discounts-service'
      com.datadoghq.tags.version: '2.1'
      my.custom.label.team: 'discounts'
      # discounts log label here
  frontend:
    image: 'ddtraining/storefront-fixed:2.1.2'
    ports:
      - '3000:3000'
    depends_on:
      - datadog
      - discounts
      - advertisements
    labels:
      com.datadoghq.tags.env: 'dd101-sre'
      com.datadoghq.tags.service: 'store-frontend'
      com.datadoghq.tags.version: '2.1'
      my.custom.label.team: 'frontend'
      # frontend log label here
  advertisements:
    environment:
      - FLASK_APP=ads.py
      - FLASK_DEBUG=1
      - POSTGRES_PASSWORD
      - POSTGRES_USER
      - POSTGRES_HOST=db
    image: 'ddtraining/advertisements:2.1.4'
    entrypoint:
      []
    ports:
      - '5002:5002'
    depends_on:
      - datadog
      - db
    labels:
      com.datadoghq.tags.env: 'dd101-sre'
      com.datadoghq.tags.service: 'advertisements-service'
      com.datadoghq.tags.version: '2.1'
      my.custom.label.team: 'advertisements'
      # advertisements log label here
  db:
    image: postgres:11-alpine
    restart: always
    environment:
      - POSTGRES_PASSWORD
      - POSTGRES_USER
    ports:
      - '5432:5432'
    labels:
      com.datadoghq.tags.env: 'dd101-sre'
      com.datadoghq.tags.service: 'database'
      com.datadoghq.tags.version: '11'
      my.custom.label.team: 'database'
      # postgres integration template here
      # postgres logs label here
    volumes:
      - /root/postgres:/var/lib/postgresql/data
      - /root/dd_agent.sql:/docker-entrypoint-initdb.d/dd_agent.sql
  puppeteer:
    image: buildkite/puppeteer:10.0.0
    volumes:
      - /root/puppeteer-mobile.js:/puppeteer.js
      - /root/puppeteer.sh:/puppeteer.sh
    environment:
      - STOREDOG_URL
      - PUPPETEER_TIMEOUT
    depends_on:
      - frontend
    command: bash puppeteer.sh
