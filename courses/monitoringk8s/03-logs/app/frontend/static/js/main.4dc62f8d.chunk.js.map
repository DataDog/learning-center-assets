{"version":3,"sources":["listItems.js","SimpleLineChart.js","SimpleTable.js","UsersTable.js","SensorsTable.js","Dashboard.js","registerServiceWorker.js","index.js"],"names":["mainListItems","react_default","a","createElement","ListItem_default","button","ListItemIcon_default","Dashboard_default","ListItemText_default","primary","Ballot_default","People_default","BarChart_default","secondaryListItems","ListSubheader_default","inset","Assignment_default","data","name","Users","GPH","SimpleLineChart","ResponsiveContainer_default","width","height","LineChart_default","XAxis_default","dataKey","YAxis_default","CartesianGrid_default","vertical","strokeDasharray","Tooltip_default","Legend_default","Line_default","type","stroke","activeDot","r","withStyles","root","overflowX","table","minWidth","props","classes","pumps","handlePumpStatusSwitch","e","preventDefault","console","log","target","id","Paper_default","className","Table_default","TableHead_default","TableRow_default","TableCell_default","numeric","TableBody_default","map","n","key","component","scope","Switch_default","checked","status","onClick","disabled","color","gph","users","demand_gph","sensors","site","value","rootURL","Dashboard","state","open","pumpStatus","userStatus","uid","sensorsStatus","added","Date","now","requestsOpen","requestCount","newUser","userList","pollForSensors","setTimeout","_this","simulateSensorReads","componentDidMount","axios","get","crossdomain","then","response","setState","pump_status","sensor_status","system_status","handleNewPump","post","handleRequestConcurrent","concurrent","total","url","parentElement","handleUserRequestConcurrent","handleUserSubmit","handleUserChange","newUserForm","Object","assign","handleConcurrentClose","event","reason","handleDrawerOpen","handleDrawerClose","this","Fragment","CssBaseline_default","AppBar_default","position","classNames","appBar","appBarShift","Toolbar_default","disableGutters","toolbar","IconButton_default","aria-label","menuButton","menuButtonHidden","Menu_default","Typography_default","variant","noWrap","title","Badge_default","badgeContent","Notifications_default","Drawer_default","paper","drawerPaper","drawerPaperClose","toolbarIcon","ChevronLeft_default","Divider_default","List_default","content","appBarSpacer","gutterBottom","chartContainer","src_SimpleLineChart","Button_default","style","float","tableContainer","src_SimpleTable","src_SensorsTable","src_UsersTable","Grid_default","container","direction","justify","alignItems","align","item","xs","TextField_default","label","placeholder","textField","margin","onChange","size","submitButton","trafficButton","backgroundColor","purple","Snackbar_default","anchorOrigin","horizontal","autoHideDuration","onClose","ContentProps","aria-describedby","message","action","close","handle100Close","Close_default","React","Component","theme","display","paddingRight","objectSpread","justifyContent","padding","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","concat","enteringScreen","marginRight","flexGrow","whiteSpace","defineProperty","spacing","unit","breakpoints","up","overflow","marginTop","marginBottom","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_Dashboard","document","querySelector","URL","process","origin","addEventListener","fetch","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.4dc62f8d.chunk.js","sourcesContent":["import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport BallotIcon from '@material-ui/icons/Ballot';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\n\nexport const mainListItems = (\n  <div>\n    <ListItem button>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Dashboard\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <BallotIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Pump Status\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <PeopleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Sensor Status\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <BarChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"User Demand\" />\n    </ListItem>\n  </div>\n);\n\nexport const secondaryListItems = (\n  <div>\n    <ListSubheader inset>Saved reports</ListSubheader>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Current month\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Last quarter\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Yearly Usage\" />\n    </ListItem>\n  </div>\n);\n","import React from 'react';\nimport ResponsiveContainer from 'recharts/lib/component/ResponsiveContainer';\nimport LineChart from 'recharts/lib/chart/LineChart';\nimport Line from 'recharts/lib/cartesian/Line';\nimport XAxis from 'recharts/lib/cartesian/XAxis';\nimport YAxis from 'recharts/lib/cartesian/YAxis';\nimport CartesianGrid from 'recharts/lib/cartesian/CartesianGrid';\nimport Tooltip from 'recharts/lib/component/Tooltip';\nimport Legend from 'recharts/lib/component/Legend';\n\nconst data = [\n  { name: 'Mon', Users: 2200, GPH: 3400 },\n  { name: 'Tue', Users: 1280, GPH: 2398 },\n  { name: 'Wed', Users: 5000, GPH: 4300 },\n  { name: 'Thu', Users: 4780, GPH: 2908 },\n  { name: 'Fri', Users: 5890, GPH: 4800 },\n  { name: 'Sat', Users: 4390, GPH: 3800 },\n  { name: 'Sun', Users: 4490, GPH: 4300 },\n];\n\nfunction SimpleLineChart() {\n  return (\n    // 99% per https://github.com/recharts/recharts/issues/172\n    <ResponsiveContainer width=\"99%\" height={320}>\n      <LineChart data={data}>\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <CartesianGrid vertical={false} strokeDasharray=\"3 3\" />\n        <Tooltip />\n        <Legend />\n        <Line type=\"monotone\" dataKey=\"Users\" stroke=\"#82ca9d\" />\n        <Line type=\"monotone\" dataKey=\"GPH\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n}\n\nexport default SimpleLineChart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Switch from '@material-ui/core/Switch';\n\nconst styles = {\n  root: {\n    width: '100%',\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 700,\n  },\n};\n\nfunction SimpleTable(props) {\n  const { classes, pumps } = props\n\n  function handlePumpStatusSwitch(e) {\n    e.preventDefault()\n    console.log(e.target.id)\n  }\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Pump Name</TableCell>\n            <TableCell numeric>Pump Status</TableCell>\n            <TableCell numeric>Gallons Per Hour</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {pumps.map(n => {\n            return (\n              <TableRow key={n.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {n.name}\n                </TableCell>\n                <TableCell numeric><Switch id={n.id} checked={n.status == 'ON' ? 1: 0 } onClick={handlePumpStatusSwitch} disabled='true' color='primary' /></TableCell> {/*n.status*/}\n                <TableCell numeric>{n.gph}</TableCell>\n\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}\n\nSimpleTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  pumps: PropTypes.array.isRequired,\n};\n\nexport default withStyles(styles)(SimpleTable);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Switch from '@material-ui/core/Switch';\n\nconst styles = {\n  root: {\n    width: '100%',\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 700,\n  },\n};\n\nfunction UsersTable(props) {\n  const { classes, users } = props\n\n  function handlePumpStatusSwitch(e) {\n    e.preventDefault()\n    console.log(e.target.id)\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>City Name</TableCell>\n            <TableCell numeric>Demand in GPH</TableCell>\n            <TableCell numeric>Total Users</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {users.map(n => {\n            return (\n              <TableRow key={n.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {n.name}\n                </TableCell>\n                <TableCell numeric>{n.demand_gph}</TableCell>\n                <TableCell numeric>{n.users}</TableCell>\n\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}\n\nUsersTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  pumps: PropTypes.array.isRequired,\n};\n\nexport default withStyles(styles)(UsersTable);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Switch from '@material-ui/core/Switch';\n\nconst styles = {\n  root: {\n    width: '100%',\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 700,\n  },\n};\n\nfunction SensorsTable(props) {\n  const { classes, sensors } = props\n\n  function handlePumpStatusSwitch(e) {\n    e.preventDefault()\n    console.log(e.target.id)\n  }\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Sensor Name</TableCell>\n            <TableCell numeric>Sensor Site</TableCell>\n            <TableCell numeric>Sensor Value</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {sensors.map(n => {\n            return (\n              <TableRow key={n.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {n.name}\n                </TableCell>\n                <TableCell numeric>{n.site}</TableCell>\n                <TableCell numeric>{n.value}</TableCell>\n\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}\n\nSensorsTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  sensors: PropTypes.array.isRequired,\n};\n\nexport default withStyles(styles)(SensorsTable);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Paper from '@material-ui/core/Paper';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { mainListItems, secondaryListItems } from './listItems';\nimport SimpleLineChart from './SimpleLineChart';\nimport SimpleTable from './SimpleTable';\nimport UsersTable from './UsersTable'\nimport SensorsTable from './SensorsTable'\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport purple from '@material-ui/core/colors/purple';\nimport axios from 'axios';\nimport { isNumber } from 'recharts/lib/util/DataUtils';\n\n\nconst drawerWidth = 240;\n\nvar rootURL = ''\n\nif (process.env.NODE_ENV == 'development') {\n  rootURL='http://localhost:5000'\n}\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing.unit * 7,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing.unit * 9,\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  chartContainer: {\n    marginLeft: -22,\n  },\n  tableContainer: {\n    \n  },\n  paper: {\n    marginTop: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit * 3,\n    padding: theme.spacing.unit * 1.5,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 400,\n  },\n  submitButton: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n      marginTop: theme.spacing.unit + 20,\n      marginBottom: theme.spacing.unit + 20,\n      width: 100,\n  },\n  trafficButton: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    marginTop: theme.spacing.unit,\n    marginBottom: theme.spacing.unit,\n  }\n});\n\nclass Dashboard extends React.Component {\n  state = {\n    open: false,\n    pumpStatus: [{'id': 1, 'name': 'Pump 1', 'status': 'ON', 'gph': 400}],\n    userStatus: [{'id': 1, 'uid': '42023-12024-4951A', 'name': 'Test City', 'demand_gph': 10, 'users': 200}],\n    sensorsStatus: [{'id': 1, 'name': 'Test Sensor', 'value': 100, 'added': Date.now(), 'site': 'Naples'}],\n    requestsOpen: false,\n    requestCount: 0,\n    newUser: {'name': '', 'demand_gph': '', 'users': ''},\n    userList: []\n  };\n\n  pollForSensors = () => {\n    setTimeout(() => {\n      this.simulateSensorReads()\n      this.pollForSensors()\n    }, 3000)\n  }\n\n  componentDidMount = () => {\n    \n    axios.get(rootURL + \"/status\", { crossdomain: true }).then(response => {\n      console.log(response.data)\n      this.setState({pumpStatus: response.data.pump_status.status})\n      this.setState({userStatus: response.data.users})\n      this.setState({sensorsStatus: response.data.sensor_status.system_status})\n    })\n\n    this.pollForSensors()\n  }\n\n  simulateSensorReads = () => {\n    axios.get(rootURL + \"/simulate_sensors\", {crossdomain: true}).then(response => {\n      //console.log(response.data)\n      this.setState({sensorsStatus: response.data.system_status})\n    })\n  }\n\n  handleNewPump = (e) => {\n    e.preventDefault()\n    axios.post(rootURL + \"/add_pump\", {crossdomain: true}).then(response => {\n      this.setState({pumpStatus: response.data})\n    })\n  }\n  handleRequestConcurrent = (e) => {\n    e.preventDefault()\n\n    // have to do this because there's a gap in buttons :/\n    if (e.target.id) {\n      const concurrent = e.target.id / 10\n      const total = e.target.id\n      axios.post(rootURL + \"/generate_requests\", \n      {'concurrent': concurrent,\n      'total': total,\n      'url': '/users'},\n      {crossdomain: true}).then(response => {\n        this.setState({requestsOpen: true, requestCount: total})\n      })\n    } else {\n      const concurrent = e.target.parentElement.id / 10\n      const total = e.target.parentElement.id\n      axios.post(rootURL + \"/generate_requests\", \n      {'concurrent': concurrent,\n      'total': total,\n      'url': '/users'},\n      {crossdomain: true}).then(response => {\n        this.setState({requestsOpen: true, requestCount: total})\n      })\n    }\n  }\n\n  handleUserRequestConcurrent = (e) => {\n    e.preventDefault()\n    axios.get(rootURL + \"/generate_requests_user\",\n      {crossdomain: true}).then(response => {\n        this.setState({requestsOpen: true, requestCount: 100})\n    })\n  }\n\n  handleUserSubmit = (e) => {\n    e.preventDefault()\n    axios.post(rootURL + '/users', this.state.newUser, {crossdomain: true}).then(response => {\n      console.log(response.data)\n      axios.get(rootURL + \"/status\", { crossdomain: true }).then(response => {\n        this.setState({userStatus: response.data.users})\n      })\n    })\n    console.log(this.state.newUser)\n    console.log('user submitted')\n  }\n\n  handleUserChange = (e) => {\n    let newUserForm = Object.assign({}, this.state.newUser)\n    newUserForm[e.target.id] = e.target.value\n    this.setState({newUser: newUserForm});\n  }\n\n  handleConcurrentClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    this.setState({ requestsOpen: false });\n  }\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <div className={classes.root}>\n          <AppBar\n            position=\"absolute\"\n            className={classNames(classes.appBar, this.state.open && classes.appBarShift)}\n          >\n            <Toolbar disableGutters={!this.state.open} className={classes.toolbar}>\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"Open drawer\"\n                onClick={this.handleDrawerOpen}\n                className={classNames(\n                  classes.menuButton,\n                  this.state.open && classes.menuButtonHidden,\n                )}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"title\" color=\"inherit\" noWrap className={classes.title}>\n                Dashboard\n              </Typography>\n              <IconButton color=\"inherit\">\n                <Badge badgeContent={0}>\n                  <NotificationsIcon />\n                </Badge>\n              </IconButton>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            variant=\"permanent\"\n            classes={{\n              paper: classNames(classes.drawerPaper, !this.state.open && classes.drawerPaperClose),\n            }}\n            open={this.state.open}\n          >\n            <div className={classes.toolbarIcon}>\n              <IconButton onClick={this.handleDrawerClose}>\n                <ChevronLeftIcon />\n              </IconButton>\n            </div>\n            <Divider />\n            <List>{mainListItems}</List>\n            <Divider />\n            <List>{secondaryListItems}</List>\n          </Drawer>\n          <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            <Typography variant=\"display1\" gutterBottom>\n              Water Demand \n            </Typography>\n            <Typography component=\"div\" className={classes.chartContainer}>\n              <SimpleLineChart />\n            </Typography>\n            <Typography variant=\"display1\" gutterBottom>\n              Pump Status <Button style={{float: 'right'}} variant=\"contained\" color=\"primary\" onClick={this.handleNewPump}>\n                Add Pump\n              </Button>\n            </Typography>\n            <div className={classes.tableContainer}>\n              <SimpleTable  pumps={this.state.pumpStatus}/>\n            </div>\n            <div className={classes.appBarSpacer} />\n            <Typography variant=\"display1\" gutterBottom>\n            City Water Sensor Status\n            </Typography>\n            <div className={classes.tableContainer}>\n              <SensorsTable  sensors={this.state.sensorsStatus}/>\n            </div>\n            <div className={classes.appBarSpacer} />\n            <Typography variant=\"display1\" gutterBottom>\n            City Water Usage\n            </Typography>\n            <div className={classes.tableContainer}>\n              <UsersTable  users={this.state.userStatus}/>\n            </div>\n            <div className={classes.appBarSpacer} />\n            \n            <Grid container direction=\"row\" justify=\"space-around\"\n            alignItems=\"stretch\"\n            >\n            <Paper className={classes.paper}>\n            <div className={classes.appBarSpacer} />\n            <Typography align=\"center\" variant=\"display1\" gutterBottom>\n            Add City to Water System\n            </Typography>\n            <Grid item xs={12}>\n            \n            <TextField\n              id=\"name\"\n              label=\"City name\"\n              placeholder=\"City Name\"\n              className={classes.textField}\n              margin=\"normal\"\n              value={this.state.newUser.name}\n              onChange={this.handleUserChange}\n             />\n             </Grid>\n             <Grid item xs>\n            <TextField \n              id=\"demand_gph\"\n              label=\"Demand in GPH\"\n              placeholder=\"400\"\n              className={classes.textField}\n              margin=\"normal\"\n              value={this.state.newUser.demand_gph}\n              onChange={this.handleUserChange}\n            />\n            </Grid>\n            <Grid item xs>\n            <TextField \n              id=\"users\"\n              label=\"Total Water Users\"\n              placeholder=\"1000\"\n              className={classes.textField}\n              margin=\"normal\"\n              value={this.state.newUser.users}\n              onChange={this.handleUserChange}\n            />\n            </Grid>\n            <Grid item xs>\n            <Button style={{float: 'right' }} size=\"large\" variant=\"contained\" color=\"primary\" className={classes.submitButton} onClick={this.handleUserSubmit}>\n                Create City\n            </Button>\n            </Grid>\n            </Paper>\n            <Paper className={classes.paper}>\n                      <div className={classes.appBarSpacer} />\n            <Typography align=\"center\" variant=\"display1\" gutterBottom>\n              Generate API Traffic\n            </Typography>\n            <br />\n            <Button id=\"100\" className={classes.trafficButton} size=\"large\" variant=\"contained\" color=\"default\" onClick={this.handleRequestConcurrent}>\n                100 users @ 10 concurrent requests\n            </Button>\n            <br /><Button id=\"200\" className={classes.trafficButton} size=\"large\" variant=\"contained\" color=\"primary\" onClick={this.handleRequestConcurrent}>\n                200 users @ 20 concurrent requests\n            </Button>\n            <br /><Button id=\"300\" className={classes.trafficButton} size=\"large\" variant=\"contained\" color=\"secondary\" onClick={this.handleRequestConcurrent}>\n                300 users @ 30 concurrent requests\n            </Button>\n            <br /><Button id=\"100\" style={{backgroundColor: purple[500]}} className={classes.trafficButton} size=\"large\" variant=\"contained\" color=\"secondary\" onClick={this.handleUserRequestConcurrent}>\n                Generate Requests for Random User\n            </Button>\n          </Paper>\n            </Grid>\n            </main>\n          <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.state.requestsOpen}\n          autoHideDuration={1000}\n          onClose={this.handleConcurrentClose}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">{ this.state.requestCount } requests created @ { this.state.requestCount / 10} concurrent requests. </span>}\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              className={classes.close}\n              onClick={this.handle100Close}\n            >\n              <CloseIcon />\n            </IconButton>,\n          ]}\n        />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Dashboard);\n","/* eslint-disable */\n\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ',\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Dashboard from './Dashboard';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<Dashboard />, document.querySelector('#root'));\nregisterServiceWorker();\n"],"sourceRoot":""}