version: "3.7"
services:
  datadog:
    image: gcr.io/datadoghq/agent:7
    environment:
      - DD_API_KEY
      - DD_HOSTNAME
      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
      - DD_PROCESS_AGENT_ENABLED=true
      - DD_CONTAINER_LABELS_AS_TAGS={"my.custom.label.team":"team"}
      - DD_TAGS=${DD_TAGS-env:sandbox-lab}
      - DD_APM_NON_LOCAL_TRAFFIC=true
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
      - DD_SYSTEM_PROBE_NETWORK_ENABLED=true
      - DD_SYSTEM_PROBE_SERVICE_MONITORING_ENABLED=true
      - DD_RUNTIME_SECURITY_CONFIG_ENABLED=true
      - DD_RUNTIME_SECURITY_CONFIG_NETWORK_ENABLED=true
      - HOST_ROOT='/host/root'
    pid: "host"
    ports:
      - "8126:8126/tcp"
      - "8125:8125/udp"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
      - /sys/kernel/debug:/sys/kernel/debug
      - /:/host/root:ro
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
      - /etc/os-release:/etc/os-release
    cap_add:
      - SYS_ADMIN
      - SYS_RESOURCE
      - SYS_PTRACE
      - NET_ADMIN
      - NET_BROADCAST
      - NET_RAW
      - IPC_LOCK
      - CHOWN
    security_opt:
      - apparmor:unconfined
  discounts:
    image: public.ecr.aws/x2b9z2t7/storedog/discounts:1.0.8
    environment:
      - FLASK_APP=discounts.py
      - FLASK_DEBUG=1
      - POSTGRES_PASSWORD
      - POSTGRES_USER
      - POSTGRES_HOST=db
      - DD_ENV=${DD_ENV}
      - DD_SERVICE=store-discounts
      - DD_VERSION=1.0.8
      - DD_AGENT_HOST=datadog
      - DD_LOGS_INJECTION=true
      - DD_RUNTIME_METRICS_ENABLED=true
      - DD_PROFILING_ENABLED=true
      - DD_APPSEC_ENABLED=true
    ports:
      - "${DISCOUNTS_PORT}:${DISCOUNTS_PORT}"
    depends_on:
      - datadog
      - db
    labels:
      com.datadoghq.ad.logs: '[{"source": "python", "service": "store-discounts"}]'
      com.datadoghq.tags.env: '${DD_ENV}'
      com.datadoghq.tags.service: 'store-discounts'
      com.datadoghq.tags.version: '1.0.8'
      my.custom.label.team: 'discounts'
  frontend:
    image: public.ecr.aws/x2b9z2t7/storedog/frontend:1.0.8
    command: bash -c "yarn upgrade @datadog/browser-rum && yarn dev"
    volumes:
      - /root/lab/.env:/storedog-app/site/.env.local
    ports:
      - "${FRONTEND_PORT-3000}:${FRONTEND_PORT-3000}"
    environment:
      - DD_AGENT_HOST=datadog
      - DD_LOGS_INJECTION=true
      - DD_ENV=${DD_ENV}
      - DD_SERVICE=store-frontend
      - DD_SITE=datadoghq.com
      - DD_VERSION=1.0.8
      - POSTGRES_USERNAME
      - POSTGRES_PASSWORD
      - DD_CLIENT_TOKEN
      - DD_APPLICATION_ID
      - DD_PROFILING_ENABLED=true
      - DD_APPSEC_ENABLED=true
    depends_on:
      - datadog
      - db
      - discounts
      - advertisements
    labels:
      com.datadoghq.ad.logs: '[{"source": "nodejs", "service": "store-frontend"}]'
      com.datadoghq.tags.env: '${DD_ENV}'
      com.datadoghq.tags.service: 'store-frontend'
      com.datadoghq.tags.version: '1.0.8'
      my.custom.label.team: 'frontend'
  backend:
    image: public.ecr.aws/x2b9z2t7/storedog/backend:1.0.8
    command: wait-for-it db:5432 -- bundle exec rails s -b 0.0.0.0 -p 4000
    depends_on:
      - datadog
      - db
      - redis
    ports:
      - ${ADMIN_PORT:-4000}:${ADMIN_PORT:-4000}
    volumes:
      - /root/rails_database.yml:/app/config/database.yml
      - /root/services/backend/config/initializers/datadog-tracer.rb:/app/config/initializers/datadog-tracer.rb
    environment:
      - REDIS_URL
      - DB_HOST=db
      - DB_PORT=5432
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - DISABLE_SPRING=1
      - NEXT_PUBLIC_SPREE_API_HOST
      - NEXT_PUBLIC_SPREE_CLIENT_HOST
      - DD_ENV=${DD_ENV}
      - DD_SERVICE=store-backend
      - DD_VERSION=1.0.8
      - DD_AGENT_HOST=datadog
      - DD_LOGS_INJECTION=true
      - DD_RUNTIME_METRICS_ENABLED=true
      - DD_PROFILING_ENABLED=true
      - DD_APPSEC_ENABLED=true
    labels:
      com.datadoghq.ad.logs: '[{"source": "ruby", "service": "store-backend"}]'
      com.datadoghq.tags.env: '${DD_ENV}'
      com.datadoghq.tags.service: 'store-backend'
      com.datadoghq.tags.version: '1.0.8'
      my.custom.label.team: 'backend'
  worker:
    image: public.ecr.aws/x2b9z2t7/storedog/backend:1.0.8
    command: wait-for-it db:5432 -- bundle exec sidekiq -C config/sidekiq.yml
    depends_on:
      - db
      - redis
      - backend
      - datadog
    volumes:
      - /root/rails_database.yml:/app/config/database.yml
      - /root/services/worker/config/initializers/datadog-tracer.rb:/app/config/initializers/datadog-tracer.rb
    environment:
      - REDIS_URL
      - DB_HOST=db
      - DB_PORT=5432
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - DISABLE_SPRING=1
      - NEXT_PUBLIC_SPREE_API_HOST
      - NEXT_PUBLIC_SPREE_CLIENT_HOST
      - DD_ENV=${DD_ENV}
      - DD_SERVICE=store-worker
      - DD_VERSION=1.0.8
      - DD_AGENT_HOST=datadog
      - DD_LOGS_INJECTION=true
      - DD_RUNTIME_METRICS_ENABLED=true
      - DD_PROFILING_ENABLED=true
      - DD_APPSEC_ENABLED=true
    labels:
      com.datadoghq.ad.logs: '[{"source": "ruby", "service": "store-worker"}]'
      com.datadoghq.tags.env: '${DD_ENV}'
      com.datadoghq.tags.service: 'store-worker'
      com.datadoghq.tags.version: '1.0.8'
      my.custom.label.team: 'backend'
  advertisements:
    image: public.ecr.aws/x2b9z2t7/storedog/ads:1.0.8
    environment:
      - FLASK_APP=ads.py
      - FLASK_DEBUG=1
      - POSTGRES_PASSWORD
      - POSTGRES_USER
      - POSTGRES_HOST=db
      - DD_ENV=${DD_ENV}
      - DD_SERVICE=store-ads
      - DD_VERSION=1.0.8
      - DD_AGENT_HOST=datadog
      - DD_LOGS_INJECTION=true
      - DD_RUNTIME_METRICS_ENABLED=true
      - DD_PROFILING_ENABLED=true
      - DD_APPSEC_ENABLED=true
    ports:
      - "${ADS_PORT}:${ADS_PORT}"
    depends_on:
      - datadog
      - db
    labels:
      com.datadoghq.ad.logs: '[{"source": "python", "service": "store-ads"}]'
      com.datadoghq.tags.env: '${DD_ENV}'
      com.datadoghq.tags.service: 'store-ads'
      com.datadoghq.tags.version: '1.0.8'
      my.custom.label.team: 'advertisements'
  nginx:
    image: nginx:1.21.4
    restart: always
    ports:
      - "80:80"
    depends_on:
      - datadog
      - frontend
    volumes:
      - /root/nginx_default.conf:/etc/nginx/conf.d/default.conf
      - /root/nginx_status.conf:/etc/nginx/conf.d/status.conf
    labels:
      com.datadog.tags.env: '${DD_ENV}'
      com.datadog.tags.service: 'store-nginx'
      com.datadog.tags.version: '1.21.4'
      com.datadoghq.ad.logs: '[{"source": "nginx", "service": "webserver"}]'
      com.datadoghq.ad.check_names: '["nginx"]'
      com.datadoghq.ad.init_configs: '[{}]'
      com.datadoghq.ad.instances: '[{"nginx_status_url": "http://%%host%%:81/nginx_status/"}]'
  db:
    image: postgres:13-alpine
    restart: always
    environment:
      - POSTGRES_PASSWORD
      - POSTGRES_USER
    ports:
      - "5432:5432"
    labels:
      com.datadoghq.tags.env: '${DD_ENV}'
      com.datadoghq.tags.service: 'database'
      com.datadoghq.tags.version: '13'
      my.custom.label.team: 'database'
      com.datadoghq.ad.check_names: '["postgres"]'
      com.datadoghq.ad.init_configs: '[{}]'
      com.datadoghq.ad.instances: '[{"host":"%%host%%", "port":5432,"username":"datadog","password":"datadog"}]'
      com.datadoghq.ad.logs: '[{"source": "postgresql", "service": "postgres"}]'
    volumes:
      - /root/restore.sql:/docker-entrypoint-initdb.d/restore.sql
  redis:
    image: redis:6.2-alpine
    volumes:
      - /root/redis:/data
    labels:
      com.datadoghq.tags.env: '${DD_ENV}'
      com.datadoghq.tags.service: 'redis'
      com.datadoghq.tags.version: '6.2'
      my.custom.label.team: 'database'
      com.datadoghq.ad.check_names: '["redisdb"]'
      com.datadoghq.ad.init_configs: '[{}]'
      com.datadoghq.ad.instances: '[{"host":"%%host%%", "port":6379}]'
      com.datadoghq.ad.logs: '[{"source": "redis", "service": "redis"}]'
  security:
    image: ghcr.io/datadog/vulnerable-java-application:latest
    environment:
      - DD_ENV=${DD_ENV}
      - DD_SERVICE=tester-service
      - DD_VERSION=1.0.0
      - DD_AGENT_HOST=datadog
      - DD_LOGS_INJECTION=true
      - DD_PROFILING_ENABLED=true
      - DD_APPSEC_ENABLED=true
    ports:
      - "8000:8000"
    depends_on:
      - datadog
    labels:
      com.datadoghq.ad.logs: '[{"source": "java", "service": "tester-service"}]'
      com.datadoghq.tags.env: '${DD_ENV}'
      com.datadoghq.tags.service: 'tester-service'
      com.datadoghq.tags.version: '1.0.0'
      my.custom.label.team: 'security'
  puppeteer:
    image: buildkite/puppeteer:10.0.0
    volumes:
      - /root/puppeteer.js:/puppeteer.js
      - /root/puppeteer.sh:/puppeteer.sh
    environment:
      - STOREDOG_URL
      - PUPPETEER_TIMEOUT
      - SKIP_SESSION_CLOSE
    depends_on:
      - frontend
    command: bash puppeteer.sh
